swagger: '2.0'
schemes: # é uma definição dos protocolos que serão aceitos pela api
  - http
  - https
host: localhost:8085 # esta porta é apenas um exemplo - a 8080 foi evitada no curso para evitar conflitos
basePath: /bytebank-api/v1
info: # O info são metadados como título e descrição sobre a sua api.
  version: 1.0.0
  title: ByteBank API
  description: Administração da movimentação bancária e controle de acesso através de senha e cpf.
  termsOfService: http://localhost:8085/bytebank-api/v1/termo-uso # endereço de acesso à documentação da api
  contact: #São dados de contato para o suporte da manutenção da api
    name: Suporte
    url:  http://localhost:8085/bytebank-api/v1/suporte
    email: suporte@bytebankapi.com
  license: # Não é obrigatório.
    name: MIT
    url: http://opensource.org/licenses/MIT
securityDefinitions: # aqui é onde você define a segurança da sua aplicação
  BasicAuth:
    type: basic
security:
  - BasicAuth: []
consumes: # Ao declarar o consumes e o produces aqui você está colocando uma configuração global. Nada te impede de declarar estas mesmas variáveis dentro de um dos paths.
  - application/json
produces:
  - application/json
tags:
  - name: Cliente
  - name: Conta
  - name: Extrato
  - name: Transacao
paths:
  '/cliente':
    post:
      tags:
        - Cliente
      summary: Cadastra cliente
      description: Cadastra um novo cliente
      operationId: cadastraCliente # aqui você especifica o nome do método no java
      parameters:
        - in: body # significa que os parâmetros estão no corpo da requisição
          name: cliente_ # quando você colocar um parâmetro de nome igual ao path, adicione um _ no final para evitar um erro.
          schema: # o schema é a definição de tipo e atributos do parâmetro.
            $ref: '#/definitions/Cliente'
      responses:
        201:
          description: Cadastro efetuado com sucesso
          schema:
            $ref: '#/definitions/Cliente'
        400:
          description: Requisição inválida
        500:
          description: Erro interno no servidor
  '/conta/{agencia}/{numero}/{digito}/saldo':
    get:
      tags:
        - Conta
      summary: Consulta saldo
      description: Consulta o saldo da conta do cliente
      operationId: consultaSaldo
      security: # indica que esta operação deve possuir algum tipo de segurança, como por exemplo um token.
        - BasicAuth: []
      parameters: #declaração dos parâmetros declarados no path
        - in: path #informação estará no path
          name: agencia
          required: true
          type: integer
          format: int32
        - in: path
          name: numero
          required: true
          type: integer
          format: int64
        - in: path
          name: digito
          required: true
          type: integer
          format: int32
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        200:
          description: Consulta ao saldo efetuada com sucesso.
          schema:
            type: number
            format: double
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro no servidor.
  '/transacao':
    post:
      tags:
        - Transacao
      summary: Cadastra transação na conta
      description: Cadastra uma transação de débito ou depósito na conta.
      operationId: cadastraTransacao
      parameters:
        - in: header
          type: string
          name: Authorization
          required: true
        - in: body
          name: transacao
          schema:
            $ref: '#/definitions/Transacao'
          required: true
        - in: query # é para passar um parâmetro com restrição de valor. Aqui você usou para passar um enum.
          name: tipo
          type: string
          enum:
            - debito
            - deposito
          required: true
      security:
        - BasicAuth: []
      responses:
        201:
          description: Cadastro de transação efetuada com sucesso.
          schema:
            $ref: '#/definitions/Transacao'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro no servidor.
  '/extrato/{agencia}/{numero}/{digito}':
    get:
      tags:
        - Extrato
      summary: Consulta de extrato
      description: Consulta o extrato da conta.
      operationId: consultaExtrato
      parameters:
        - in: path
          name: agencia
          required: true
          type: integer
          format: int32
        - in: path
          name: numero
          required: true
          type: integer
          format: int64
        - in: path
          name: digito
          required: true
          type: integer
          format: int32
        - in: header
          name: Authorization
          type: string
          required: true
      security:
        - BasicAuth: []
      responses:
        200:
          description: Consulta o extrato de extrato efetuada com sucesso.
          schema:
            $ref: '#/definitions/Extrato'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro no servidor.
  '/transacao/{codigo}':
    delete:
      tags:
        - Transacao
      summary: Remove uma transação
      description: Remove uma transação
      security:
        - BasicAuth: []
      operationId: removerTransacao
      parameters:
        - in: path
          name: codigo
          type: integer
          format: int64
          required: true
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        204:
          description: Transação excluída com sucesso.
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro no servidor.
    put:
      tags:
        - Transacao
      summary: Altera transação
      description: Altera o valor da transação existente na conta do cliente
      security:
        - BasicAuth: []
      operationId: alteraValorTransacao
      parameters:
        - in: path
          name: codigo
          type: integer
          format: int64
          required: true
        - in: query
          name: valor
          type: number
          format: double
          required: true
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        204:
          description: Alteração do valor efetuada com sucesso.
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro no servidor.

definitions:
  Cliente:
    type: object
    properties:
      id:
        type: integer
        format: int64 # Converte ele para um Long
        example: 234
      titular:
        type: string
        example: Janete # esse atributo é apenas um exemplo que você poderá ver no editor online do swagger. Não afeta a api em si.
      cpf:
        type: string
        maxLength: 11
        minLength: 11
        example: 01234567890
      senha:
        type: string
        format: password
        example: senha123
      conta:
        type: array
        items:
          $ref: '#/definitions/Conta'
  Conta:
    type: object
    properties:
      agencia:
        type: integer
        format: int32
        example: 975
      numero:
        type: integer
        format: int64
        example: 784563
      digito:
        type: integer
        format: int32
        example: 7
      saldo:
        type: number
        format: double
        example: 101.34
      cliente:
        $ref: '#/definitions/Cliente'
      transacoes:
        type: array
        items:
          $ref: '#/definitions/Transacao'
  Transacao:
    type: object
    properties:
      id:
        type: integer
        format: int64
      tipo:
        type: string
        enum:
          - debito
          - deposito
      valor:
        type: number
        format: double
      data:
        type: string
        format: date-time
      conta:
        $ref: '#/definitions/Conta'
  Extrato:
    type: object
    properties:
      transacoes:
        type: array
        items:
          $ref: '#/definitions/Transacao'
