<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>gerenciador</display-name>
  <welcome-file-list>
    <welcome-file>bem-vindo.html</welcome-file>
  </welcome-file-list>
  <servlet>
    <servlet-name>OiMundoServlet</servlet-name>
    <servlet-class>br.com.alura.gerenciador.servlet.OiMundoServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>OiMundoServlet</servlet-name>
    <url-pattern>/ola</url-pattern>
  </servlet-mapping>
  <!-- 
	O timeout nada mais é que a remoção do HttpSession do servidor de aplicação,
	 invalidando o acesso daquele navegador (ou seja, sendo necessário criar uma 
	 nova sessão e um novo cookie para ele).
	 
	 O timeout padrão de sessão do Tomcat é 30 minutos. 
	 -->
	<session-config>
		<!-- 10 min -->
		<session-timeout>10</session-timeout>
	</session-config> 
	
	<!-- Exemplo de implementação de filtro via web.xml -->
	<!-- Não se esqueça de que os mesmos podem ser declarados via anotação -->
	<!-- Esta implementação serve também para quando você faz questão de que os filtros sejam chamados em uma ordem definida por você -->
	<filter>
		<filter-name>MF</filter-name>
		<filter-class>br.com.alura.gerenciador.servlet.MonitoramentoFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>MF</filter-name>
		<url-pattern>/entrada</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>AF</filter-name>
		<filter-class>br.com.alura.gerenciador.servlet.AutorizacaoFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>AF</filter-name>
		<url-pattern>/entrada</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>CF</filter-name>
		<filter-class>br.com.alura.gerenciador.servlet.ControladorFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CF</filter-name>
		<url-pattern>/entrada</url-pattern>
	</filter-mapping>

	<!--
	SE VOCÊ FOSSE UTILIZAR A API DO JAAS - que não é utilizado em aplicações web,
	VOCÊ TERIA QUE IMPLEMENTAR ALGO PARECIDO COM O SEGUINTE:
	 
	<login-config>
		<auth-method>BASIC</auth-method>
	</login-config>

	<security-role>
		<role-name>ADMINISTRADOR</role-name>
	</security-role>

	<security-role>
		<role-name>USUARIO</role-name>
	</security-role>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>acesso controlador</web-resource-name>
			<url-pattern>/entrada</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>ADMINISTRADOR</role-name>
		</auth-constraint>
	</security-constraint>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>acesso a paginas html</web-resource-name>
			<url-pattern>*.html</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>USUARIO</role-name>
		</auth-constraint>
	</security-constraint>
	
	*******
	PARA FINALIZAR O PERMISSIONAMENTO, VOCÊ DEVERIA INCLUIR NO
	ARQUIVO tomcat-users.xml O SEGUINTE:
	*******
	
	<tomcat-users>
	  <role rolename="ADMINISTRADOR"/>
	  <role rolename="USUARIO"/>
	  <user username="admin" password="123" roles="ADMINISTRADOR, USUARIO"/>
	  <user username="user" password="123" roles="USUARIO"/>
	</tomcat-users>
	
	 -->
  
  
</web-app>

